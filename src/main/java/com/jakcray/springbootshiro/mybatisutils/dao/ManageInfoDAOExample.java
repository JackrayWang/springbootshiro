package com.jakcray.springbootshiro.mybatisutils.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ManageInfoDAOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public ManageInfoDAOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdmanageinfoIsNull() {
            addCriterion("idmanageinfo is null");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoIsNotNull() {
            addCriterion("idmanageinfo is not null");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoEqualTo(String value) {
            addCriterion("idmanageinfo =", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoNotEqualTo(String value) {
            addCriterion("idmanageinfo <>", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoGreaterThan(String value) {
            addCriterion("idmanageinfo >", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoGreaterThanOrEqualTo(String value) {
            addCriterion("idmanageinfo >=", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoLessThan(String value) {
            addCriterion("idmanageinfo <", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoLessThanOrEqualTo(String value) {
            addCriterion("idmanageinfo <=", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoLike(String value) {
            addCriterion("idmanageinfo like", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoNotLike(String value) {
            addCriterion("idmanageinfo not like", value, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoIn(List<String> values) {
            addCriterion("idmanageinfo in", values, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoNotIn(List<String> values) {
            addCriterion("idmanageinfo not in", values, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoBetween(String value1, String value2) {
            addCriterion("idmanageinfo between", value1, value2, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andIdmanageinfoNotBetween(String value1, String value2) {
            addCriterion("idmanageinfo not between", value1, value2, "idmanageinfo");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andUpperIsNull() {
            addCriterion("upper is null");
            return (Criteria) this;
        }

        public Criteria andUpperIsNotNull() {
            addCriterion("upper is not null");
            return (Criteria) this;
        }

        public Criteria andUpperEqualTo(String value) {
            addCriterion("upper =", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperNotEqualTo(String value) {
            addCriterion("upper <>", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperGreaterThan(String value) {
            addCriterion("upper >", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperGreaterThanOrEqualTo(String value) {
            addCriterion("upper >=", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperLessThan(String value) {
            addCriterion("upper <", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperLessThanOrEqualTo(String value) {
            addCriterion("upper <=", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperLike(String value) {
            addCriterion("upper like", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperNotLike(String value) {
            addCriterion("upper not like", value, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperIn(List<String> values) {
            addCriterion("upper in", values, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperNotIn(List<String> values) {
            addCriterion("upper not in", values, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperBetween(String value1, String value2) {
            addCriterion("upper between", value1, value2, "upper");
            return (Criteria) this;
        }

        public Criteria andUpperNotBetween(String value1, String value2) {
            addCriterion("upper not between", value1, value2, "upper");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeIsNull() {
            addCriterion("idmanagetype is null");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeIsNotNull() {
            addCriterion("idmanagetype is not null");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeEqualTo(String value) {
            addCriterion("idmanagetype =", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeNotEqualTo(String value) {
            addCriterion("idmanagetype <>", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeGreaterThan(String value) {
            addCriterion("idmanagetype >", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeGreaterThanOrEqualTo(String value) {
            addCriterion("idmanagetype >=", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeLessThan(String value) {
            addCriterion("idmanagetype <", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeLessThanOrEqualTo(String value) {
            addCriterion("idmanagetype <=", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeLike(String value) {
            addCriterion("idmanagetype like", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeNotLike(String value) {
            addCriterion("idmanagetype not like", value, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeIn(List<String> values) {
            addCriterion("idmanagetype in", values, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeNotIn(List<String> values) {
            addCriterion("idmanagetype not in", values, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeBetween(String value1, String value2) {
            addCriterion("idmanagetype between", value1, value2, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andIdmanagetypeNotBetween(String value1, String value2) {
            addCriterion("idmanagetype not between", value1, value2, "idmanagetype");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return (Criteria) this;
        }

        public Criteria andAddtimeEqualTo(Date value) {
            addCriterion("addtime =", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotEqualTo(Date value) {
            addCriterion("addtime <>", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThan(Date value) {
            addCriterion("addtime >", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("addtime >=", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThan(Date value) {
            addCriterion("addtime <", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(Date value) {
            addCriterion("addtime <=", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeIn(List<Date> values) {
            addCriterion("addtime in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotIn(List<Date> values) {
            addCriterion("addtime not in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeBetween(Date value1, Date value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotBetween(Date value1, Date value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andTsIsNull() {
            addCriterion("ts is null");
            return (Criteria) this;
        }

        public Criteria andTsIsNotNull() {
            addCriterion("ts is not null");
            return (Criteria) this;
        }

        public Criteria andTsEqualTo(Date value) {
            addCriterion("ts =", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotEqualTo(Date value) {
            addCriterion("ts <>", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsGreaterThan(Date value) {
            addCriterion("ts >", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsGreaterThanOrEqualTo(Date value) {
            addCriterion("ts >=", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsLessThan(Date value) {
            addCriterion("ts <", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsLessThanOrEqualTo(Date value) {
            addCriterion("ts <=", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsIn(List<Date> values) {
            addCriterion("ts in", values, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotIn(List<Date> values) {
            addCriterion("ts not in", values, "ts");
            return (Criteria) this;
        }

        public Criteria andTsBetween(Date value1, Date value2) {
            addCriterion("ts between", value1, value2, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotBetween(Date value1, Date value2) {
            addCriterion("ts not between", value1, value2, "ts");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manageinfo
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manageinfo
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}