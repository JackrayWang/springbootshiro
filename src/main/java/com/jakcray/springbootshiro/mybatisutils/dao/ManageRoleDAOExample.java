package com.jakcray.springbootshiro.mybatisutils.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ManageRoleDAOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public ManageRoleDAOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdmanageRoleIsNull() {
            addCriterion("idmanage_role is null");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleIsNotNull() {
            addCriterion("idmanage_role is not null");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleEqualTo(String value) {
            addCriterion("idmanage_role =", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleNotEqualTo(String value) {
            addCriterion("idmanage_role <>", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleGreaterThan(String value) {
            addCriterion("idmanage_role >", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleGreaterThanOrEqualTo(String value) {
            addCriterion("idmanage_role >=", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleLessThan(String value) {
            addCriterion("idmanage_role <", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleLessThanOrEqualTo(String value) {
            addCriterion("idmanage_role <=", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleLike(String value) {
            addCriterion("idmanage_role like", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleNotLike(String value) {
            addCriterion("idmanage_role not like", value, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleIn(List<String> values) {
            addCriterion("idmanage_role in", values, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleNotIn(List<String> values) {
            addCriterion("idmanage_role not in", values, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleBetween(String value1, String value2) {
            addCriterion("idmanage_role between", value1, value2, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageRoleNotBetween(String value1, String value2) {
            addCriterion("idmanage_role not between", value1, value2, "idmanageRole");
            return (Criteria) this;
        }

        public Criteria andIdmanageIsNull() {
            addCriterion("idmanage is null");
            return (Criteria) this;
        }

        public Criteria andIdmanageIsNotNull() {
            addCriterion("idmanage is not null");
            return (Criteria) this;
        }

        public Criteria andIdmanageEqualTo(String value) {
            addCriterion("idmanage =", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageNotEqualTo(String value) {
            addCriterion("idmanage <>", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageGreaterThan(String value) {
            addCriterion("idmanage >", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageGreaterThanOrEqualTo(String value) {
            addCriterion("idmanage >=", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageLessThan(String value) {
            addCriterion("idmanage <", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageLessThanOrEqualTo(String value) {
            addCriterion("idmanage <=", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageLike(String value) {
            addCriterion("idmanage like", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageNotLike(String value) {
            addCriterion("idmanage not like", value, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageIn(List<String> values) {
            addCriterion("idmanage in", values, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageNotIn(List<String> values) {
            addCriterion("idmanage not in", values, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageBetween(String value1, String value2) {
            addCriterion("idmanage between", value1, value2, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdmanageNotBetween(String value1, String value2) {
            addCriterion("idmanage not between", value1, value2, "idmanage");
            return (Criteria) this;
        }

        public Criteria andIdroleIsNull() {
            addCriterion("idrole is null");
            return (Criteria) this;
        }

        public Criteria andIdroleIsNotNull() {
            addCriterion("idrole is not null");
            return (Criteria) this;
        }

        public Criteria andIdroleEqualTo(String value) {
            addCriterion("idrole =", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleNotEqualTo(String value) {
            addCriterion("idrole <>", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleGreaterThan(String value) {
            addCriterion("idrole >", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleGreaterThanOrEqualTo(String value) {
            addCriterion("idrole >=", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleLessThan(String value) {
            addCriterion("idrole <", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleLessThanOrEqualTo(String value) {
            addCriterion("idrole <=", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleLike(String value) {
            addCriterion("idrole like", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleNotLike(String value) {
            addCriterion("idrole not like", value, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleIn(List<String> values) {
            addCriterion("idrole in", values, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleNotIn(List<String> values) {
            addCriterion("idrole not in", values, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleBetween(String value1, String value2) {
            addCriterion("idrole between", value1, value2, "idrole");
            return (Criteria) this;
        }

        public Criteria andIdroleNotBetween(String value1, String value2) {
            addCriterion("idrole not between", value1, value2, "idrole");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return (Criteria) this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return (Criteria) this;
        }

        public Criteria andAddtimeEqualTo(Date value) {
            addCriterion("addtime =", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotEqualTo(Date value) {
            addCriterion("addtime <>", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThan(Date value) {
            addCriterion("addtime >", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("addtime >=", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThan(Date value) {
            addCriterion("addtime <", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(Date value) {
            addCriterion("addtime <=", value, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeIn(List<Date> values) {
            addCriterion("addtime in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotIn(List<Date> values) {
            addCriterion("addtime not in", values, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeBetween(Date value1, Date value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andAddtimeNotBetween(Date value1, Date value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return (Criteria) this;
        }

        public Criteria andTsIsNull() {
            addCriterion("ts is null");
            return (Criteria) this;
        }

        public Criteria andTsIsNotNull() {
            addCriterion("ts is not null");
            return (Criteria) this;
        }

        public Criteria andTsEqualTo(Date value) {
            addCriterion("ts =", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotEqualTo(Date value) {
            addCriterion("ts <>", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsGreaterThan(Date value) {
            addCriterion("ts >", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsGreaterThanOrEqualTo(Date value) {
            addCriterion("ts >=", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsLessThan(Date value) {
            addCriterion("ts <", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsLessThanOrEqualTo(Date value) {
            addCriterion("ts <=", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsIn(List<Date> values) {
            addCriterion("ts in", values, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotIn(List<Date> values) {
            addCriterion("ts not in", values, "ts");
            return (Criteria) this;
        }

        public Criteria andTsBetween(Date value1, Date value2) {
            addCriterion("ts between", value1, value2, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotBetween(Date value1, Date value2) {
            addCriterion("ts not between", value1, value2, "ts");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_role
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manage_role
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}